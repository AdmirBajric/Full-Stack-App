{"version":3,"sources":["components/Courses.js","components/helpers/ErrorDisplay.js","components/UserSignUp.js","components/UserSignIn.js","components/CourseDetail.js","components/Form.js","components/CreateCourse.js","components/UpdateCourse.js","components/NotFound.js","components/Forbidden.js","components/UnhandledError.js","config.js","Data.js","Context.js","PrivateRoute.js","App.js","components/Header.js","components/UserSignOut.js","serviceWorker.js","index.js"],"names":["Courses","state","courses","fetchAllCourses","a","context","props","data","getCourses","setState","console","log","history","push","this","className","map","course","key","id","to","title","version","xmlns","x","y","viewBox","points","Component","ErrorDisplay","errors","errorsDisplay","length","error","err","i","UserSignUp","firstName","lastName","emailAddress","password","confirmPassword","change","event","name","target","value","submit","e","preventDefault","user","createUser","then","newErr","Object","values","actions","signIn","catch","cancel","onSubmit","htmlFor","type","placeholder","onChange","onClick","UserSignIn","email","from","location","pathname","validation","ReactMarkdown","require","CourseDetail","fetchCourse","match","params","getCourse","message","User","handleDelete","authenticatedUser","window","confirm","deleteCourse","status","userId","description","estimatedTime","materialsNeeded","buttons","source","submitButtonText","CreateCourse","createCourse","Form","UpdateCourse","isMounted","updateCourse","NotFound","UnhandledError","Data","path","method","body","requiresAuth","credentials","url","config","options","headers","JSON","stringify","encodedCredentials","btoa","username","fetch","api","response","json","Error","Context","React","createContext","Provider","Cookies","getJSON","getUser","set","signOut","remove","children","Consumer","withContext","component","rest","render","HeaderWithContext","authUser","Fragment","CoursesWithContext","CourseDetailWithContext","CreateCourseWithContext","UpdateCourseWithContext","UserSignUpWithContext","UserSignInWithContext","UserSignOutWithContext","useEffect","exact","PrivateRoute","Forbidden","Boolean","hostname","ReactDOM","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5b70cd41.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Courses extends Component {\r\n  // set state\r\n  state = {\r\n    courses: [],\r\n  };\r\n  // call fetchCourse to fetch the data\r\n  componentDidMount() {\r\n    this.fetchAllCourses();\r\n  }\r\n  // fetch the data\r\n  fetchAllCourses = async () => {\r\n    // use context from props to handle with the context.js and data.js\r\n    const { context } = this.props;\r\n\r\n    try {\r\n      // use the data for to courses from the database\r\n      const courses = await context.data.getCourses();\r\n      // set state with the courses data\r\n      this.setState({ courses });\r\n      // handle errors\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.props.history.push(\"/error\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    // return jsx\r\n    return (\r\n      <div className=\"bounds\">\r\n        {this.state.courses.map((course) => (\r\n          <div key={course.id} className=\"grid-33\">\r\n            <Link\r\n              className=\"course--module course--link\"\r\n              to={`/courses/${course.id}`}\r\n            >\r\n              <h4 className=\"course--label\">Course</h4>\r\n              <h3 className=\"course--title\">{course.title}</h3>\r\n            </Link>\r\n          </div>\r\n        ))}\r\n        <div className=\"grid-33\">\r\n          <Link\r\n            className=\"course--module course--add--module\"\r\n            to=\"/courses/create\"\r\n          >\r\n            <h3 className=\"course--add--title\">\r\n              <svg\r\n                version=\"1.1\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                x=\"0px\"\r\n                y=\"0px\"\r\n                viewBox=\"0 0 13 13\"\r\n                className=\"add\"\r\n              >\r\n                <polygon points=\"7,6 7,0 6,0 6,6 0,6 0,7 6,7 6,13 7,13 7,7 13,7 13,6 \"></polygon>\r\n              </svg>\r\n              New Course\r\n            </h3>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\n// error handling function\r\nexport default function ErrorDisplay(props) {\r\n  const { errors } = props;\r\n\r\n  let errorsDisplay = null;\r\n\r\n  if (errors.length) {\r\n    const error = errors.map((err, i) => <li key={i}>{err}</li>);\r\n    errorsDisplay = (\r\n      <div>\r\n        <h2 className=\"validation--errors--label\">Validation errors</h2>\r\n        <div className=\"validation-errors\">\r\n          <ul>{error}</ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return errorsDisplay;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// import errorDisplay component for error handling\r\nimport ErrorDisplay from \"./helpers/ErrorDisplay\";\r\n\r\nexport default class UserSignUp extends Component {\r\n  // set state\r\n  state = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    emailAddress: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    errors: [],\r\n  };\r\n\r\n  render() {\r\n    // destructuring variables from state\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      emailAddress,\r\n      password,\r\n      confirmPassword,\r\n      errors,\r\n    } = this.state;\r\n    // return jsx\r\n    return (\r\n      <div className=\"bounds\">\r\n        <div className=\"grid-33 centered signin\">\r\n          <h1>Sign Up</h1>\r\n          {/* render the errorDisplay component, if errors display to page */}\r\n          <ErrorDisplay errors={errors} />\r\n          <div>\r\n            <form onSubmit={this.submit}>\r\n              <div>\r\n                <label htmlFor=\"firstName\">First Name</label>\r\n                <input\r\n                  id=\"firstName\"\r\n                  name=\"firstName\"\r\n                  type=\"text\"\r\n                  placeholder=\"First Name\"\r\n                  value={firstName}\r\n                  onChange={this.change}\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"lastName\">Last Name</label>\r\n                <input\r\n                  id=\"lastName\"\r\n                  name=\"lastName\"\r\n                  type=\"text\"\r\n                  placeholder=\"Last Name\"\r\n                  value={lastName}\r\n                  onChange={this.change}\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"emailAddress\">Email Address</label>\r\n                <input\r\n                  id=\"emailAddress\"\r\n                  name=\"emailAddress\"\r\n                  type=\"text\"\r\n                  placeholder=\"Email Address\"\r\n                  value={emailAddress}\r\n                  onChange={this.change}\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  value={password}\r\n                  onChange={this.change}\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                <input\r\n                  id=\"confirmPassword\"\r\n                  name=\"confirmPassword\"\r\n                  type=\"password\"\r\n                  placeholder=\"Confirm Password\"\r\n                  value={confirmPassword}\r\n                  onChange={this.change}\r\n                />\r\n              </div>\r\n              <div className=\"grid-100 pad-bottom\">\r\n                <button className=\"button\" type=\"submit\">\r\n                  Sign Up\r\n                </button>\r\n                <button\r\n                  className=\"button button-secondary\"\r\n                  onClick={this.cancel}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <p>&nbsp;</p>\r\n          <p>\r\n            Already have a user account? <Link to=\"/signin\">Click here</Link>\r\n            to sign in!\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  // handle change event\r\n  change = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    // set the state for the current event\r\n    this.setState(() => {\r\n      return {\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n  // submit the form to create the course\r\n  submit = (e) => {\r\n    // prevent browser to refresh\r\n    e.preventDefault();\r\n    // use context from props to handle with the context.js and data.js\r\n    const { context } = this.props;\r\n    // destructuring variables from the state\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      emailAddress,\r\n      password,\r\n      confirmPassword,\r\n    } = this.state;\r\n    // set course variable with required data\r\n    const user = {\r\n      firstName,\r\n      lastName,\r\n      emailAddress,\r\n      password,\r\n    };\r\n    // check if password match\r\n    if (password === confirmPassword) {\r\n      // call createUser function from data.js\r\n      context.data\r\n        .createUser(user)\r\n        .then((errors) => {\r\n          // handle errors when the course is not updated\r\n          if (errors.length) {\r\n            let newErr = [];\r\n            errors.map((err) => {\r\n              newErr.push(Object.values(err));\r\n              return newErr;\r\n            });\r\n            // set the state errors\r\n            this.setState({ errors: newErr });\r\n          } else {\r\n            // if success singUp, call singIn function to log the user in and set cookies\r\n            context.actions.signIn(emailAddress, password).then(() => {\r\n              // push to history stack\r\n              this.props.history.push(\"/\");\r\n            });\r\n          }\r\n        })\r\n        // handle errors\r\n        .catch((error) => {\r\n          this.props.history.push(\"/error\");\r\n        });\r\n      // if passwords not match set state with error message\r\n    } else {\r\n      this.setState({\r\n        errors: [\"Password don't match\"],\r\n      });\r\n    }\r\n  };\r\n  // if button \"cancel\" is clicked push to history\r\n  cancel = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class UserSignIn extends Component {\r\n  // set state\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    errors: [],\r\n  };\r\n\r\n  render() {\r\n    // destructuring variables from state\r\n    const { email, password, errors } = this.state;\r\n\r\n    let validation = null;\r\n    // if errors set jsx to validation variable\r\n    if (errors.length > 0) {\r\n      validation = (\r\n        <div>\r\n          <h2 className=\"validation--errors--label\">Validation errors</h2>\r\n          <div className=\"validation-errors\">\r\n            <ul>{errors}</ul>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    // return jsx\r\n    return (\r\n      <div className=\"bounds\">\r\n        <div className=\"grid-33 centered signin\">\r\n          <h1>Sign In</h1>\r\n          {validation}\r\n          <form onSubmit={this.submit}>\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              id=\"email\"\r\n              name=\"email\"\r\n              type=\"text\"\r\n              value={email}\r\n              onChange={this.change}\r\n              placeholder=\"Email Address\"\r\n            />\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              id=\"password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={this.change}\r\n              placeholder=\"Password\"\r\n            />\r\n            <div className=\"grid-100 pad-bottom\">\r\n              <button className=\"button\" type=\"submit\">\r\n                Sign In\r\n              </button>\r\n              <button className=\"button-secondary\" onClick={this.cancel}>\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </form>\r\n          <p>\r\n            Don't have a user account? <Link to=\"/signup\">Click here</Link> to\r\n            sign up!\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  // handle change event\r\n  change = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    // set the state for the current event\r\n    this.setState(() => {\r\n      return {\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n  // submit the form to create the course\r\n  submit = (e) => {\r\n    // prevent browser for refreshing\r\n    e.preventDefault();\r\n    // use context from props to handle with the context.js and data.js\r\n    const { context } = this.props;\r\n    // sets path where user will be directed after sign in\r\n    const { from } = this.props.location.state || { from: { pathname: \"/\" } };\r\n    // destructuring variable from state\r\n    const { email, password } = this.state;\r\n    // call singIn function from data.js\r\n    context.actions\r\n      .signIn(email, password)\r\n      .then((user) => {\r\n        // if user not exist set state errors with message\r\n        if (user === null) {\r\n          this.setState({ errors: [\"Sign-in was unsuccessful\"] });\r\n        } else {\r\n          // if course is created push to history\r\n          this.props.history.push(from);\r\n        }\r\n      })\r\n      // handle errors\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.props.history.push(\"/error\");\r\n      });\r\n  };\r\n  // if button \"cancel\" is clicked push to history\r\n  cancel = (event) => {\r\n    event.preventDefault();\r\n    this.props.history.push(\"/\");\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nconst ReactMarkdown = require(\"react-markdown\");\r\n\r\nexport default class CourseDetail extends Component {\r\n  // set state\r\n  state = {\r\n    course: [],\r\n    user: [],\r\n  };\r\n  // call fetchCourse to fetch the data\r\n  componentDidMount() {\r\n    this.fetchCourse();\r\n  }\r\n  // fetch the data\r\n  fetchCourse = async () => {\r\n    // use context from props to handle with the context.js and data.js\r\n    const { context } = this.props;\r\n    const id = this.props.match.params.id;\r\n\r\n    try {\r\n      // use the data for to course from the database\r\n      const course = await context.data.getCourse(id);\r\n      // if course message true the course not found (because: message returned is course not found)\r\n      if (course.message) {\r\n        this.props.history.push(\"/notfound\");\r\n      } else {\r\n        // set state\r\n        this.setState({ course: course.course, user: course.course.User });\r\n      }\r\n      // handling errors\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.props.history.push(\"/error\");\r\n    }\r\n  };\r\n  // delete the course\r\n  handleDelete = (id) => {\r\n    const { context } = this.props;\r\n    const emailAddress = this.props.context.authenticatedUser.user.emailAddress;\r\n    const password = this.props.context.authenticatedUser.password;\r\n    // confirm the delete option\r\n    const confirm = window.confirm(\r\n      \"Are you sure you wish to delete this course?\"\r\n    );\r\n    if (confirm) {\r\n      context.data\r\n        .deleteCourse(emailAddress, password, id)\r\n        .then((data) => {\r\n          if (data.status === 204) {\r\n            // if success deleting push to history\r\n            this.props.history.push(\"/\");\r\n          }\r\n        })\r\n        // handle the errors\r\n        .catch((error) => {\r\n          this.props.history.push(\"/error\");\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    // destructuring course variables\r\n    const {\r\n      id,\r\n      userId,\r\n      title,\r\n      description,\r\n      estimatedTime,\r\n      materialsNeeded,\r\n    } = this.state.course;\r\n\r\n    const { firstName, lastName } = this.state.user;\r\n    let buttons = null;\r\n    // if authenticated user is true\r\n    if (this.props.context.authenticatedUser) {\r\n      // if authenticated user match the course owner, set the required buttons to show\r\n      if (userId === this.props.context.authenticatedUser.user.id) {\r\n        buttons = (\r\n          <div className=\"grid-100\">\r\n            <span>\r\n              <Link className=\"button\" to={`/courses/${id}/update`}>\r\n                Update Course\r\n              </Link>\r\n              <button className=\"button\" onClick={() => this.handleDelete(id)}>\r\n                Delete Course\r\n              </button>\r\n            </span>\r\n            <Link className=\"button button-secondary\" to=\"/\">\r\n              Return to List\r\n            </Link>\r\n          </div>\r\n        );\r\n      } else {\r\n        buttons = (\r\n          <div className=\"grid-100\">\r\n            <Link className=\"button button-secondary\" to=\"/\">\r\n              Return to List\r\n            </Link>\r\n          </div>\r\n        );\r\n      }\r\n    } else {\r\n      buttons = (\r\n        <div className=\"grid-100\">\r\n          <Link className=\"button button-secondary\" to=\"/\">\r\n            Return to List\r\n          </Link>\r\n        </div>\r\n      );\r\n    }\r\n    // return jsx and reactMarkdown\r\n    return (\r\n      <div>\r\n        <div className=\"actions--bar\">\r\n          <div className=\"bounds\">{buttons}</div>\r\n        </div>\r\n        <div className=\"bounds course--detail\">\r\n          <div className=\"grid-66\">\r\n            <div className=\"course--header\">\r\n              <h4 className=\"course--label\">Course</h4>\r\n              <h3 className=\"course--title\">{title}</h3>\r\n              <p>By {`${firstName} ${lastName}`}</p>\r\n            </div>\r\n            <div className=\"course--description\">\r\n              <ReactMarkdown source={description} />\r\n            </div>\r\n          </div>\r\n          <div className=\"grid-25 grid-right\">\r\n            <div className=\"course--stats\">\r\n              <ul className=\"course--stats--list\">\r\n                <li className=\"course--stats--list--item\">\r\n                  <h4>Estimated Time</h4>\r\n                  <h3>{estimatedTime}</h3>\r\n                </li>\r\n                <li className=\"course--stats--list--item\">\r\n                  <h4>Materials Needed</h4>\r\n                  <ReactMarkdown source={materialsNeeded} />\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n// import errorDisplay component for error handling\r\nimport ErrorDisplay from \"./helpers/ErrorDisplay\";\r\n\r\nexport default (props) => {\r\n  // destructuring variables from the props\r\n  const {\r\n    change,\r\n    cancel,\r\n    errors,\r\n    submit,\r\n    submitButtonText,\r\n    title,\r\n    description,\r\n    estimatedTime,\r\n    materialsNeeded,\r\n  } = props;\r\n  // when form is submitted\r\n  function handleSubmit(event) {\r\n    // prevent browser to refresh the page\r\n    event.preventDefault();\r\n    // call submit function from the createCourse or updateCourse function\r\n    submit();\r\n  }\r\n  // when form is canceled\r\n  function handleCancel(event) {\r\n    // prevent browser to refresh the page\r\n    event.preventDefault();\r\n    // call cancel function from the createCourse or updateCourse function\r\n    cancel();\r\n  }\r\n  // return jsx\r\n  return (\r\n    <div>\r\n      {/* render the errorDisplay component, if errors display to page */}\r\n      <ErrorDisplay errors={errors} />\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"grid-66\">\r\n          <div className=\"course--header\">\r\n            <h4 className=\"course--label\">Course</h4>\r\n            <div>\r\n              <label htmlFor=\"title\">Title</label>\r\n              <input\r\n                id=\"title\"\r\n                name=\"title\"\r\n                type=\"text\"\r\n                className=\"input-title course--title--input\"\r\n                placeholder=\"Course title...\"\r\n                onChange={(event) => change(event)}\r\n                value={title}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"course--description\">\r\n            <div>\r\n              <label htmlFor=\"description\">Description</label>\r\n              <textarea\r\n                id=\"description\"\r\n                name=\"description\"\r\n                placeholder=\"Course description...\"\r\n                onChange={(event) => change(event)}\r\n                value={description}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"grid-25 grid-right\">\r\n          <div className=\"course--stats\">\r\n            <ul className=\"course--stats--list\">\r\n              <li className=\"course--stats--list--item\">\r\n                <h4>Estimated Time</h4>\r\n                <div>\r\n                  <label htmlFor=\"estimatedTime\">Estimated Time</label>\r\n                  <input\r\n                    id=\"estimatedTime\"\r\n                    name=\"estimatedTime\"\r\n                    type=\"text\"\r\n                    className=\"course--time--input\"\r\n                    placeholder=\"Hours\"\r\n                    onChange={(event) => change(event)}\r\n                    value={estimatedTime}\r\n                  />\r\n                </div>\r\n              </li>\r\n              <li className=\"course--stats--list--item\">\r\n                <h4>Materials Needed</h4>\r\n                <div>\r\n                  <label htmlFor=\"materialsNeeded\">Materials Needed</label>\r\n                  <textarea\r\n                    id=\"materialsNeeded\"\r\n                    name=\"materialsNeeded\"\r\n                    placeholder=\"List materials...\"\r\n                    onChange={(event) => change(event)}\r\n                    value={materialsNeeded}\r\n                  />\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"grid-100 pad-bottom\">\r\n          <button className=\"button\" type=\"submit\">\r\n            {submitButtonText}\r\n          </button>\r\n          <button className=\"button button-secondary\" onClick={handleCancel}>\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Form from \"./Form\";\r\n\r\nexport default class CreateCourse extends Component {\r\n  // set state\r\n  state = {\r\n    title: \"\",\r\n    description: \"\",\r\n    estimatedTime: \"\",\r\n    materialsNeeded: \"\",\r\n    errors: [],\r\n  };\r\n  render() {\r\n    // destructuring course variables\r\n    const {\r\n      title,\r\n      description,\r\n      estimatedTime,\r\n      materialsNeeded,\r\n      errors,\r\n    } = this.state;\r\n    // return jsx\r\n    return (\r\n      <div className=\"bounds course--detail\">\r\n        <h1>Create Course</h1>\r\n        <div>\r\n          <Form\r\n            change={this.change}\r\n            cancel={this.cancel}\r\n            submit={this.submit}\r\n            errors={errors}\r\n            submitButtonText=\"Create\"\r\n            title={title}\r\n            description={description}\r\n            estimatedTime={estimatedTime}\r\n            materialsNeeded={materialsNeeded}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  // handle change event\r\n  change = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    // set the state for the current event\r\n    this.setState(() => {\r\n      return {\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n  // submit the form to create the course\r\n  submit = () => {\r\n    // use context from props to handle with the context.js and data.js\r\n    const { context } = this.props;\r\n    // set user variable from the current authenticated user\r\n    const user = context.authenticatedUser;\r\n    // destructuring variables from the state\r\n    const { title, description, estimatedTime, materialsNeeded } = this.state;\r\n    // set course variable with required data\r\n    const course = {\r\n      title,\r\n      description,\r\n      estimatedTime,\r\n      materialsNeeded,\r\n      userId: user.user.id,\r\n    };\r\n    // call createCourse function from data.js\r\n    context.data\r\n      .createCourse(user.user.emailAddress, user.password, course)\r\n      .then((data) => {\r\n        // handle errors when the course is not created\r\n        if (data.errors) {\r\n          let newErr = [];\r\n          data.errors.map((err) => {\r\n            newErr.push(Object.values(err));\r\n            return newErr;\r\n          });\r\n          // set the state errors\r\n          this.setState({ errors: newErr });\r\n        } else {\r\n          // if course is created push to history\r\n          this.props.history.push(\"/\");\r\n        }\r\n      })\r\n      // handle other errors\r\n      .catch((err) => {\r\n        this.props.history.push(\"/error\");\r\n      });\r\n  };\r\n  // if button \"cancel\" is clicked push to history\r\n  cancel = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Form from \"./Form\";\r\n\r\nexport default class UpdateCourse extends Component {\r\n  // set state\r\n  state = {\r\n    title: \"\",\r\n    description: \"\",\r\n    estimatedTime: \"\",\r\n    materialsNeeded: \"\",\r\n    id: \"\",\r\n    userId: \"\",\r\n    errors: [],\r\n  };\r\n  // call fetchCourse to fetch the data\r\n  componentDidMount() {\r\n    this.fetchCourse();\r\n  }\r\n  // fetch the data\r\n  fetchCourse = async () => {\r\n    // variable is used to prevent the error when component is unmounted\r\n    let isMounted = true;\r\n    // use context from props to handle with the context.js and data.js\r\n    const { context } = this.props;\r\n    const id = this.props.match.params.id;\r\n\r\n    try {\r\n      // use the data for to course from the database\r\n      const course = await context.data.getCourse(id);\r\n      // if the course owner id not match the authenticated user, push to history stack to render the forbidden component\r\n      if (course.course.userId !== context.authenticatedUser.user.id) {\r\n        // set the variable to false\r\n        isMounted = false;\r\n        // push to history stack\r\n        this.props.history.push(\"/forbidden\");\r\n      }\r\n      // if variable is true set the state\r\n      if (isMounted) {\r\n        this.setState({\r\n          title: course.course.title,\r\n          description: course.course.description,\r\n          estimatedTime: course.course.estimatedTime,\r\n          materialsNeeded: course.course.materialsNeeded,\r\n          id: course.course.id,\r\n          userId: course.course.userId,\r\n        });\r\n      }\r\n      // handle errors\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.props.history.push(\"/notfound\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    // destructuring variables from the state\r\n    const {\r\n      title,\r\n      description,\r\n      estimatedTime,\r\n      materialsNeeded,\r\n      errors,\r\n    } = this.state;\r\n    // return jsx\r\n    return (\r\n      <div className=\"bounds course--detail\">\r\n        <h1>Update Course</h1>\r\n        <div>\r\n          <Form\r\n            change={this.change}\r\n            cancel={this.cancel}\r\n            submit={this.submit}\r\n            errors={errors}\r\n            submitButtonText=\"Update\"\r\n            title={title}\r\n            description={description}\r\n            estimatedTime={estimatedTime}\r\n            materialsNeeded={materialsNeeded}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  // handle change event\r\n  change = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    // set the state for the current event\r\n    this.setState(() => {\r\n      return {\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n  // submit the form to create the course\r\n  submit = () => {\r\n    // use context from props to handle with the context.js and data.js\r\n    const { context } = this.props;\r\n    // set user variable from the current authenticated user\r\n    const user = context.authenticatedUser;\r\n    // destructuring variables from the state\r\n    const {\r\n      title,\r\n      description,\r\n      estimatedTime,\r\n      materialsNeeded,\r\n      id,\r\n      userId,\r\n    } = this.state;\r\n    // set course variable with required data\r\n    const course = {\r\n      title,\r\n      description,\r\n      estimatedTime,\r\n      materialsNeeded,\r\n      id,\r\n      userId,\r\n    };\r\n    // call updateCourse function from data.js\r\n    context.data\r\n      .updateCourse(user.user.emailAddress, user.password, course)\r\n      .then((data) => {\r\n        // handle errors when the course is not updated\r\n        if (data.errors) {\r\n          let newErr = [];\r\n          data.errors.map((err) => {\r\n            newErr.push(Object.values(err));\r\n            return newErr;\r\n          });\r\n          // set the state errors\r\n          this.setState({ errors: newErr });\r\n        } else {\r\n          // if course is created push to history courses and the created id\r\n          this.props.history.push(`/courses/${id}`);\r\n        }\r\n      })\r\n      // handle other errors\r\n      .catch((err) => {\r\n        console.log(err);\r\n        this.props.history.push(\"/error\");\r\n      });\r\n  };\r\n  // if button \"cancel\" is clicked push to history\r\n  cancel = () => {\r\n    this.props.history.push(`/courses/${this.state.id}`);\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// handle user friendly message when a request for the page can't be found\r\nexport default function NotFound() {\r\n  return (\r\n    <div className=\"bounds\">\r\n      <h1>Not Found</h1>\r\n      <p>Sorry! We couldn't find the page you're looking for.</p>\r\n      <Link className=\"button\" to=\"/\">\r\n        Home\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// handle user friendly message when a user can't access the required page\r\nexport default function UnhandledError() {\r\n  return (\r\n    <div className=\"bounds\">\r\n      <h1>Forbidden</h1>\r\n      <p>Oh oh! You can't access this page.</p>\r\n      <Link className=\"button\" to=\"/\">\r\n        Home\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// handle user friendly message when a unexpected error has occurred\r\nexport default function UnhandledError() {\r\n  return (\r\n    <div className=\"bounds\">\r\n      <h1>Error</h1>\r\n      <p>Sorry! We just encountered an unexpected error.</p>\r\n      <Link className=\"button\" to=\"/\">\r\n        Home\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","// set base url for API\r\nexport default {\r\n  apiBaseUrl: \"http://localhost:5000/api\",\r\n};\r\n","// import base url\r\nimport config from \"./config\";\r\n// methods for fetching data from the REST API\r\nexport default class Data {\r\n  api(\r\n    path,\r\n    method = \"GET\",\r\n    body = null,\r\n    requiresAuth = false,\r\n    credentials = null\r\n  ) {\r\n    const url = config.apiBaseUrl + path;\r\n\r\n    const options = {\r\n      method,\r\n      headers: {\r\n        \"Content-Type\": \"application/json; charset=utf-8\",\r\n      },\r\n    };\r\n\r\n    if (body !== null) {\r\n      options.body = JSON.stringify(body);\r\n    }\r\n\r\n    if (requiresAuth) {\r\n      const encodedCredentials = btoa(\r\n        `${credentials.username}:${credentials.password}`\r\n      );\r\n      options.headers[\"Authorization\"] = `Basic ${encodedCredentials}`;\r\n    }\r\n    return fetch(url, options);\r\n  }\r\n  // get user from the API\r\n  async getUser(username, password) {\r\n    const response = await this.api(`/users`, \"GET\", null, true, {\r\n      username,\r\n      password,\r\n    });\r\n    if (response.status === 200) {\r\n      return response.json().then((data) => data);\r\n    } else if (response.status === 401) {\r\n      return null;\r\n    } else {\r\n      throw new Error();\r\n    }\r\n  }\r\n  // create user from the API\r\n  async createUser(user) {\r\n    const response = await this.api(\"/users\", \"POST\", user);\r\n    if (response.status === 201) {\r\n      return [];\r\n    } else if (response.status === 400) {\r\n      return response.json().then((data) => {\r\n        return data.errors;\r\n      });\r\n    } else {\r\n      throw new Error();\r\n    }\r\n  }\r\n  // get courses from the API\r\n  async getCourses() {\r\n    const response = await this.api(\"/courses\");\r\n    if (response.status === 200) {\r\n      return response.json().then((data) => {\r\n        return data;\r\n      });\r\n    } else if (response.status === 400) {\r\n      return response.json().then((data) => {\r\n        return data.errors;\r\n      });\r\n    } else {\r\n      throw new Error();\r\n    }\r\n  }\r\n  // get course from teh API\r\n  async getCourse(id) {\r\n    const response = await this.api(\"/courses/\" + id);\r\n    if (response.status === 200) {\r\n      return response.json().then((data) => {\r\n        return data;\r\n      });\r\n    } else if (response.status === 404) {\r\n      return response.json().then((data) => {\r\n        return data;\r\n      });\r\n    } else {\r\n      throw new Error();\r\n    }\r\n  }\r\n  // delete course from the API\r\n  async deleteCourse(username, password, id) {\r\n    const response = await this.api(`/courses/${id}`, \"DELETE\", null, true, {\r\n      username,\r\n      password,\r\n    });\r\n    if (response.status === 204) {\r\n      return response;\r\n    } else if (response.status === 400) {\r\n      return response.json().then((data) => {\r\n        return data.errors;\r\n      });\r\n    } else {\r\n      throw new Error();\r\n    }\r\n  }\r\n  // create course from the API\r\n  async createCourse(username, password, course) {\r\n    const response = await this.api(\"/courses/\", \"POST\", course, true, {\r\n      username,\r\n      password,\r\n    });\r\n    // possible responses 201, 400, 401, 500\r\n    if (response.status === 201) {\r\n      return response;\r\n    } else if (response.status === 400) {\r\n      return response.json().then((data) => {\r\n        return data;\r\n      });\r\n    } else {\r\n      throw new Error();\r\n    }\r\n  }\r\n  // update course from the API\r\n  async updateCourse(username, password, course) {\r\n    const response = await this.api(\r\n      `/courses/${course.id}`,\r\n      \"PUT\",\r\n      course,\r\n      true,\r\n      { username, password }\r\n    );\r\n    if (response.status === 204) {\r\n      return response;\r\n    } else if (response.status === 400) {\r\n      return response.json().then((data) => {\r\n        return data;\r\n      });\r\n    } else {\r\n      throw new Error();\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Cookies from \"js-cookie\";\r\nimport Data from \"./Data\";\r\n\r\nconst Context = React.createContext();\r\n\r\nexport class Provider extends Component {\r\n  constructor() {\r\n    super();\r\n    // create instance for Data\r\n    this.data = new Data();\r\n  }\r\n  // set state, when authenticated user or null\r\n  state = {\r\n    authenticatedUser: Cookies.getJSON(\"authenticatedUser\") || null,\r\n  };\r\n\r\n  render() {\r\n    // destructuring variable from state\r\n    const { authenticatedUser } = this.state;\r\n    // set value variable with authenticated user, data and actions for singIn and singOut functions\r\n    const value = {\r\n      authenticatedUser,\r\n      data: this.data,\r\n      actions: {\r\n        signIn: this.signIn,\r\n        signOut: this.signOut,\r\n      },\r\n    };\r\n    return (\r\n      <Context.Provider value={value}>{this.props.children}</Context.Provider>\r\n    );\r\n  }\r\n  // singIn function to log the user\r\n  signIn = async (username, password) => {\r\n    let user = await this.data.getUser(username, password);\r\n    if (user) {\r\n      user = { ...user, password };\r\n      // set state with current authenticated user\r\n      this.setState({ authenticatedUser: user });\r\n      // set the cookies for the current user\r\n      Cookies.set(\"authenticatedUser\", JSON.stringify(user));\r\n    }\r\n    return user;\r\n  };\r\n  // singOut function to log out the user\r\n  signOut = () => {\r\n    this.setState({ authenticatedUser: null });\r\n    Cookies.remove(\"authenticatedUser\");\r\n  };\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n\r\n/**\r\n * A higher-order component that wraps the provided component in a Context Consumer component.\r\n * @param {class} Component - A React component.\r\n * @returns {function} A higher-order component.\r\n */\r\n\r\nexport default function withContext(Component) {\r\n  return function ContextComponent(props) {\r\n    return (\r\n      <Context.Consumer>\r\n        {(context) => <Component {...props} context={context} />}\r\n      </Context.Consumer>\r\n    );\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { Consumer } from \"./Context\";\r\n// render component if authenticated user is true, redirects to singIn page if false, when user is singIn, redirect to page where the user has try to access\r\nexport default ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Consumer>\r\n      {(context) => (\r\n        <Route\r\n          {...rest}\r\n          render={(props) =>\r\n            context.authenticatedUser ? (\r\n              <Component {...props} />\r\n            ) : (\r\n              <Redirect\r\n                to={{\r\n                  pathname: \"/signin\",\r\n                  state: { from: props.location },\r\n                }}\r\n              />\r\n            )\r\n          }\r\n        />\r\n      )}\r\n    </Consumer>\r\n  );\r\n};\r\n","// import react, router, route and switch\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n// import components\nimport Header from \"./components/Header\";\nimport Courses from \"./components/Courses\";\nimport UserSignUp from \"./components/UserSignUp\";\nimport UserSignIn from \"./components/UserSignIn\";\nimport UserSignOut from \"./components/UserSignOut\";\nimport CourseDetail from \"./components/CourseDetail\";\nimport CreateCourse from \"./components/CreateCourse\";\nimport UpdateCourse from \"./components/UpdateCourse\";\nimport NotFound from \"./components/NotFound\";\nimport Forbidden from \"./components/Forbidden\";\nimport UnhandledError from \"./components/UnhandledError\";\n// importing withContext and configure the components to use it\nimport withContext from \"./Context\";\n// protect update and create routes\nimport PrivateRoute from \"./PrivateRoute\";\n// use components with withContext\nconst HeaderWithContext = withContext(Header);\nconst CoursesWithContext = withContext(Courses);\nconst CourseDetailWithContext = withContext(CourseDetail);\nconst CreateCourseWithContext = withContext(CreateCourse);\nconst UpdateCourseWithContext = withContext(UpdateCourse);\nconst UserSignUpWithContext = withContext(UserSignUp);\nconst UserSignInWithContext = withContext(UserSignIn);\nconst UserSignOutWithContext = withContext(UserSignOut);\n\nexport default () => (\n  <Router>\n    <div>\n      <HeaderWithContext />\n\n      <Switch>\n        <Route exact path=\"/\" component={CoursesWithContext} />\n        <PrivateRoute\n          exact\n          path=\"/courses/:id/update\"\n          component={UpdateCourseWithContext}\n        />\n        <PrivateRoute\n          path=\"/courses/create\"\n          component={CreateCourseWithContext}\n        />\n        <Route path=\"/courses/:id\" component={CourseDetailWithContext} />\n        <Route path=\"/signin\" component={UserSignInWithContext} />\n        <Route path=\"/signup\" component={UserSignUpWithContext} />\n        <Route path=\"/signout\" component={UserSignOutWithContext} />\n        <Route path=\"/notfound\" component={NotFound} />\n        <Route path=\"/forbidden\" component={Forbidden} />\n        <Route path=\"/error\" component={UnhandledError} />\n        <Route component={NotFound} />\n      </Switch>\n    </div>\n  </Router>\n);\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Header({ context }) {\r\n  // set variable for the authenticated user\r\n  const authUser = context.authenticatedUser;\r\n  // return jsx\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"bounds\">\r\n        <h1 className=\"header--logo\">Courses</h1>\r\n        <nav>\r\n          {/* if authenticated user true, render welcome message and singOut button */}\r\n          {/* when authenticated user not exist, render the singIn and singUp button */}\r\n          {authUser ? (\r\n            <React.Fragment>\r\n              <span>Welcome, {authUser.user.firstName} !</span>\r\n              <Link to=\"/signout\">Sign Out</Link>\r\n            </React.Fragment>\r\n          ) : (\r\n            <React.Fragment>\r\n              <Link className=\"signup\" to=\"/signup\">\r\n                Sign Up\r\n              </Link>\r\n              <Link className=\"signin\" to=\"/signin\">\r\n                Sign In\r\n              </Link>\r\n            </React.Fragment>\r\n          )}\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n// singOut the user\r\nexport default ({ context }) => {\r\n  // one way that I have found to prevent error when component attempts to set state in render\r\n  useEffect(() => context.actions.signOut());\r\n\r\n  return <Redirect to=\"/\" />;\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/global.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"./Context\";\n\nReactDOM.render(\n  <Provider>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}